[{"C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\index.js":"1","C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\App.js":"2","C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\Components\\Editor.js":"3"},{"size":1694,"mtime":1607978774802,"results":"4","hashOfConfig":"5"},{"size":5274,"mtime":1608057566354,"results":"6","hashOfConfig":"5"},{"size":10160,"mtime":1608249308223,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y2moo2",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\index.js",[],"C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\App.js",["15","16","17"],"import React from \"react\";\r\nimport { X, Minimize2, Maximize2, Edit3 } from \"react-feather\";\r\nimport { Logger } from \"./Components/Editor\";\r\nimport \"./App.css\";\r\n\r\nconst iconSVG =\r\n  \"data:image/svg+xml;utf8,<svg width='1em' height='1em' viewBox='0 0 16 16' class='bi bi-pencil-square' fill='white' xmlns='http://www.w3.org/2000/svg'><path d='M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z'/><path fill-rule='evenodd' d='M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z'/></svg>\";\r\n\r\nclass OpenButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <a\r\n        href=\"#\"\r\n        className=\"ng-tns-c44-127 ng-star-inserted\"\r\n        style={{ padding: \"4px 10px 2px\" }}\r\n        onClick={() => {\r\n          window.postMessage({\r\n            source: \"__stratus_logger_extension__\",\r\n            action: \"showOverlay\",\r\n          });\r\n        }}\r\n      >\r\n        <div className=\"menu-item-content flex-row-centerd\">\r\n          <div className=\"menu-icon-outer\">\r\n            <img\r\n              className=\"ng-tns-c44-127 ng-star-inserted\"\r\n              src={iconSVG}\r\n              style={{\r\n                width: \"16px\",\r\n                height: \"16px\",\r\n                verticalAlign: \"initial\",\r\n                flexShrink: 0,\r\n                display: \"block\",\r\n              }}\r\n            ></img>\r\n          </div>\r\n          <div className=\"menu-text flex-grow\" style={{ padding: \"0px 5px\" }}>\r\n            <span className=\"ng-tns-c44-127\">Transcription</span>\r\n          </div>\r\n          <div class=\"menu-arrow\" style={{ visibility: \"hidden\" }}>\r\n            <span className=\"caret caret-right\"></span>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nclass PanelNavbarTitle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"transcription-navbar-title\">\r\n        <Edit3 />\r\n        <span>Transcription</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PanelNavbar extends React.Component {\r\n  render() {\r\n    if (!this.props.minimized) {\r\n      return (\r\n        <div className=\"transcription-navbar\">\r\n          <PanelNavbarTitle />\r\n          <X\r\n            className=\"transcription-window-actions\"\r\n            onClick={() => {\r\n              window.postMessage({\r\n                source: \"__stratus_logger_extension__\",\r\n                action: \"closeOverlay\",\r\n              });\r\n            }}\r\n          />\r\n          <Minimize2\r\n            className=\"transcription-window-actions\"\r\n            onClick={() => {\r\n              window.postMessage({\r\n                source: \"__stratus_logger_extension__\",\r\n                action: \"minimizeOverlay\",\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"transcription-navbar\">\r\n          <PanelNavbarTitle />\r\n          <X\r\n            className=\"transcription-window-actions\"\r\n            onClick={() => {\r\n              window.postMessage({\r\n                source: \"__stratus_logger_extension__\",\r\n                action: \"closeOverlay\",\r\n              });\r\n            }}\r\n          />\r\n          <Maximize2\r\n            className=\"transcription-window-actions\"\r\n            onClick={() => {\r\n              window.postMessage({\r\n                source: \"__stratus_logger_extension__\",\r\n                action: \"maximizeOverlay\",\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass OverlayPanel extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { open: false, minimized: false };\r\n  }\r\n\r\n  didReceiveMessage(event) {\r\n    var msg = event.data;\r\n    if (msg.source == \"__stratus_logger_extension__\") {\r\n      switch (msg.action) {\r\n        case \"showOverlay\":\r\n          this.setState({ open: true });\r\n          break;\r\n        case \"closeOverlay\":\r\n          this.setState({ open: false, minimized: false });\r\n          break;\r\n        case \"minimizeOverlay\":\r\n          this.setState({ open: false, minimized: true });\r\n          break;\r\n        case \"maximizeOverlay\":\r\n          this.setState({ open: true, minimized: false });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.source !== window) return;\r\n      this.didReceiveMessage(event);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.open) {\r\n      return (\r\n        <div className=\"transcription-overlay-panel\">\r\n          <PanelNavbar minimized={false} />\r\n          <Logger />\r\n        </div>\r\n      );\r\n    } else if (this.state.minimized) {\r\n      return (\r\n        <div\r\n          className=\"transcription-overlay-panel minimized\"\r\n          style={{\r\n            top: this.props.parent.getBoundingClientRect().height - 32 + \"px\",\r\n          }}\r\n        >\r\n          <PanelNavbar minimized={true} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport { OpenButton, OverlayPanel };\r\n","C:\\Users\\cmhac\\OneDrive\\Documents\\GitHub\\stratuslogger\\src\\Components\\Editor.js",["18"],{"ruleId":"19","severity":1,"message":"20","line":12,"column":7,"nodeType":"21","endLine":22,"endColumn":8},{"ruleId":"22","severity":1,"message":"23","line":25,"column":13,"nodeType":"21","endLine":35,"endColumn":14},{"ruleId":"24","severity":1,"message":"25","line":122,"column":20,"nodeType":"26","messageId":"27","endLine":122,"endColumn":22},{"ruleId":"24","severity":1,"message":"25","line":279,"column":20,"nodeType":"26","messageId":"27","endLine":279,"endColumn":22},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]